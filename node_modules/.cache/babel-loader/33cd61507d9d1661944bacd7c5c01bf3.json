{"ast":null,"code":"import _objectSpread from \"/Users/teishunrai/main/react-file/change/change-state/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { createStore } from 'redux'; // function createStore (reducer) {\n//   let state = null\n//   const listeners = []\n//   const subscribe = (listener) => listeners.push(listener)\n//   const getState = () => state\n//   const dispatch = (action) => {\n//     state = reducer(state, action)\n//     listeners.forEach((listener) => listener())\n//   }\n//   dispatch({}) // 初始化 state\n//   return { getState, dispatch, subscribe }\n// }\n\nvar state = {\n  themeColor: 'red'\n};\n\nvar themeReducer = function themeReducer() {\n  var stateInit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : state;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CHANGE_COLOR':\n      return _objectSpread({}, stateInit, {\n        themeColor: action.themeColor\n      });\n\n    default:\n      return stateInit;\n  }\n};\n\nvar store = createStore(themeReducer);\nexport default store;","map":{"version":3,"sources":["/Users/teishunrai/main/react-file/change/change-state/src/store.js"],"names":["createStore","state","themeColor","themeReducer","stateInit","action","type","store"],"mappings":";AAAA,SAASA,WAAT,QAA4B,OAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,UAAU,EAAE;AADA,CAAd;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAA+B;AAAA,MAA9BC,SAA8B,uEAAlBH,KAAkB;AAAA,MAAXI,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,+BAAYF,SAAZ;AAAuBF,QAAAA,UAAU,EAAEG,MAAM,CAACH;AAA1C;;AACF;AACE,aAAOE,SAAP;AAJJ;AAMD,CAPD;;AASA,IAAMG,KAAK,GAAGP,WAAW,CAACG,YAAD,CAAzB;AAEA,eAAeI,KAAf","sourcesContent":["import { createStore } from 'redux'\n\n// function createStore (reducer) {\n//   let state = null\n//   const listeners = []\n//   const subscribe = (listener) => listeners.push(listener)\n//   const getState = () => state\n//   const dispatch = (action) => {\n//     state = reducer(state, action)\n//     listeners.forEach((listener) => listener())\n//   }\n//   dispatch({}) // 初始化 state\n//   return { getState, dispatch, subscribe }\n// }\n\nconst state = {\n  themeColor: 'red'\n}\n\nconst themeReducer = (stateInit = state, action) => {\n  switch (action.type) {\n    case 'CHANGE_COLOR':\n      return { ...stateInit, themeColor: action.themeColor }\n    default:\n      return stateInit\n  }\n}\n\nconst store = createStore(themeReducer)\n\nexport default store"]},"metadata":{},"sourceType":"module"}