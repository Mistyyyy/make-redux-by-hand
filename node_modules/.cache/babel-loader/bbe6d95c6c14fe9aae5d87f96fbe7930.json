{"ast":null,"code":"import _classCallCheck from \"/Users/teishunrai/main/react-file/change/change-state/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/teishunrai/main/react-file/change/change-state/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/teishunrai/main/react-file/change/change-state/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/teishunrai/main/react-file/change/change-state/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/teishunrai/main/react-file/change/change-state/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/teishunrai/main/react-file/change/change-state/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/teishunrai/main/react-file/change/change-state/src/component/themeColor.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar ThemeSwitch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ThemeSwitch, _Component);\n\n  function ThemeSwitch(props) {\n    var _this;\n\n    _classCallCheck(this, ThemeSwitch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ThemeSwitch).call(this, props));\n    _this.state = {\n      themeColor: ''\n    };\n    _this.changeRed = _this.changeRed.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeBlue = _this.changeBlue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ThemeSwitch, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._updateColor();\n    }\n  }, {\n    key: \"_updateColor\",\n    value: function _updateColor() {\n      var store = this.context.store;\n      var state = store.getState();\n      this.setState({\n        themeColor: state.themeColor\n      });\n    }\n  }, {\n    key: \"changeRed\",\n    value: function changeRed() {\n      var store = this.context.store;\n      store.dispatch({\n        type: 'CHANGE_COLOR',\n        themeColor: 'red'\n      });\n    }\n  }, {\n    key: \"changeBlue\",\n    value: function changeBlue() {\n      var store = this.context.store;\n      store.dispatch({\n        type: 'CHANGE_COLOR',\n        themeColor: 'blue'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          color: this.state.themeColor\n        },\n        onClick: this.changeRed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Red\"), React.createElement(\"button\", {\n        style: {\n          color: this.state.themeColor\n        },\n        onClcik: this.changeBlue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Blue\"));\n    }\n  }]);\n\n  return ThemeSwitch;\n}(Component);\n\nThemeSwitch.contextTypes = {\n  store: PropTypes.object\n};\nexport default ThemeSwitch;","map":{"version":3,"sources":["/Users/teishunrai/main/react-file/change/change-state/src/component/themeColor.js"],"names":["React","Component","PropTypes","ThemeSwitch","props","state","themeColor","changeRed","bind","changeBlue","_updateColor","store","context","getState","setState","dispatch","type","color","contextTypes","object"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,W;;;;;AAIJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,uDAAlB;AANiB;AAOlB;;;;wCACmB;AAClB,WAAKE,YAAL;AACD;;;mCACc;AAAA,UACLC,KADK,GACK,KAAKC,OADV,CACLD,KADK;AAEb,UAAMN,KAAK,GAAGM,KAAK,CAACE,QAAN,EAAd;AACA,WAAKC,QAAL,CAAc;AACZR,QAAAA,UAAU,EAAED,KAAK,CAACC;AADN,OAAd;AAGD;;;gCACW;AAAA,UACFK,KADE,GACQ,KAAKC,OADb,CACFD,KADE;AAEVA,MAAAA,KAAK,CAACI,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,cADO;AAEbV,QAAAA,UAAU,EAAE;AAFC,OAAf;AAID;;;iCACY;AAAA,UACHK,KADG,GACO,KAAKC,OADZ,CACHD,KADG;AAEXA,MAAAA,KAAK,CAACI,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,cADO;AAEbV,QAAAA,UAAU,EAAE;AAFC,OAAf;AAID;;;6BACS;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAE;AAACW,UAAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC;AAAnB,SAAf;AAA+C,QAAA,OAAO,EAAE,KAAKC,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAQ,QAAA,KAAK,EAAE;AAACU,UAAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC;AAAnB,SAAf;AAA+C,QAAA,OAAO,EAAE,KAAKG,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD;;;;EA3CuBR,S;;AAApBE,W,CACGe,Y,GAAe;AACpBP,EAAAA,KAAK,EAAET,SAAS,CAACiB;AADG,C;AA6CxB,eAAehB,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass ThemeSwitch extends Component {\n  static contextTypes = {\n    store: PropTypes.object\n  }\n  constructor(props) {\n    super(props)\n    this.state = {\n      themeColor: ''\n    }\n    this.changeRed = this.changeRed.bind(this)\n    this.changeBlue = this.changeBlue.bind(this)\n  }\n  componentDidMount() {\n    this._updateColor()\n  }\n  _updateColor() {\n    const { store } = this.context\n    const state = store.getState()\n    this.setState({\n      themeColor: state.themeColor\n    })\n  }\n  changeRed() {\n    const { store } = this.context\n    store.dispatch({\n      type: 'CHANGE_COLOR',\n      themeColor: 'red'\n    })\n  }\n  changeBlue() {\n    const { store } = this.context\n    store.dispatch({\n      type: 'CHANGE_COLOR',\n      themeColor: 'blue'\n    })\n  }\n  render () {\n    return (\n      <div >\n        <button style={{color: this.state.themeColor}} onClick={this.changeRed}>Red</button>\n        <button style={{color: this.state.themeColor}} onClcik={this.changeBlue}>Blue</button>\n      </div>\n    )\n  }\n}\n\nexport default ThemeSwitch"]},"metadata":{},"sourceType":"module"}