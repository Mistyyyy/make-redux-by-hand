{"ast":null,"code":"import _objectSpread from \"/Users/teishunrai/main/react-file/change/change-state/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { createStore } from 'redux'; // function createStore (reducer) {\n//   let state = null\n//   const listeners = []\n//   const subscribe = (listener) => listeners.push(listener)\n//   const getState = () => state\n//   const dispatch = (action) => {\n//     state = reducer(state, action)\n//     listeners.forEach((listener) => listener())\n//   }\n//   dispatch({}) // 初始化 state\n//   return { getState, dispatch, subscribe }\n// }\n\nvar themeReducer = function themeReducer(state, action) {\n  if (!state) return {\n    themeColor: 'red'\n  };\n\n  switch (action.type) {\n    case 'CHANGE_COLOR':\n      return _objectSpread({}, state, {\n        themeColor: action.themeColor\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar store = createStore(themeReducer);\nexport default store;","map":{"version":3,"sources":["/Users/teishunrai/main/react-file/change/change-state/src/store.js"],"names":["createStore","themeReducer","state","action","themeColor","type","store"],"mappings":";AAAA,SAASA,WAAT,QAA4B,OAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACtC,MAAI,CAACD,KAAL,EAAY,OAAO;AACjBE,IAAAA,UAAU,EAAE;AADK,GAAP;;AAGZ,UAAQD,MAAM,CAACE,IAAf;AACE,SAAK,cAAL;AACE,+BAAYH,KAAZ;AAAmBE,QAAAA,UAAU,EAAED,MAAM,CAACC;AAAtC;;AACF;AACE,aAAOF,KAAP;AAJJ;AAMD,CAVD;;AAYA,IAAMI,KAAK,GAAGN,WAAW,CAACC,YAAD,CAAzB;AAEA,eAAeK,KAAf","sourcesContent":["import { createStore } from 'redux'\n\n// function createStore (reducer) {\n//   let state = null\n//   const listeners = []\n//   const subscribe = (listener) => listeners.push(listener)\n//   const getState = () => state\n//   const dispatch = (action) => {\n//     state = reducer(state, action)\n//     listeners.forEach((listener) => listener())\n//   }\n//   dispatch({}) // 初始化 state\n//   return { getState, dispatch, subscribe }\n// }\n\nconst themeReducer = (state, action) => {\n  if (!state) return {\n    themeColor: 'red'\n  }\n  switch (action.type) {\n    case 'CHANGE_COLOR':\n      return { ...state, themeColor: action.themeColor }\n    default:\n      return state\n  }\n}\n\nconst store = createStore(themeReducer)\n\nexport default store"]},"metadata":{},"sourceType":"module"}