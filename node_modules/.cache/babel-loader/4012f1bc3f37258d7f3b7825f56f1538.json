{"ast":null,"code":"import _classCallCheck from \"/Users/teishunrai/main/react-file/change/change-state/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/teishunrai/main/react-file/change/change-state/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/teishunrai/main/react-file/change/change-state/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/teishunrai/main/react-file/change/change-state/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/teishunrai/main/react-file/change/change-state/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/teishunrai/main/react-file/change/change-state/src/connect.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar connect = function connect(mapStateToProps) {\n  return function (WrapperComponent) {\n    var _class, _temp;\n\n    return _temp = _class =\n    /*#__PURE__*/\n    function (_Component) {\n      _inherits(_class, _Component);\n\n      function _class() {\n        _classCallCheck(this, _class);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n      }\n\n      _createClass(_class, [{\n        key: \"render\",\n        value: function render() {\n          var store = this.context.store;\n          var mapToProps = mapStateToProps(store.getState());\n          return React.createElement(WrapperComponent, Object.assign({}, mapToProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 14\n            },\n            __self: this\n          }));\n        }\n      }]);\n\n      return _class;\n    }(Component), _class.contextType = {\n      store: PropTypes.object\n    }, _temp;\n  };\n};\n\nexport { connect };","map":{"version":3,"sources":["/Users/teishunrai/main/react-file/change/change-state/src/connect.js"],"names":["React","Component","PropTypes","connect","mapStateToProps","WrapperComponent","store","context","mapToProps","getState","contextType","object"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,eAAe;AAAA,SAAI,UAAAC,gBAAgB,EAAI;AAAA;;AACrD;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAKW;AAAA,cACCC,KADD,GACW,KAAKC,OADhB,CACCD,KADD;AAEP,cAAME,UAAU,GAAGJ,eAAe,CAACE,KAAK,CAACG,QAAN,EAAD,CAAlC;AACA,iBACE,oBAAC,gBAAD,oBAAsBD,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAGD;AAXH;;AAAA;AAAA,MAAqBP,SAArB,UACSS,WADT,GACuB;AACnBJ,MAAAA,KAAK,EAAEJ,SAAS,CAACS;AADE,KADvB;AAaD,GAd8B;AAAA,CAA/B;;AAgBA,SAASR,OAAT","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nconst connect = mapStateToProps => WrapperComponent => {\n  return class extends Component {\n    static contextType = {\n      store: PropTypes.object\n    }\n\n    render() {\n      const { store } = this.context\n      const mapToProps = mapStateToProps(store.getState())\n      return (\n        <WrapperComponent {...mapToProps} />\n      )\n    }\n  }\n}\n\nexport { connect }"]},"metadata":{},"sourceType":"module"}